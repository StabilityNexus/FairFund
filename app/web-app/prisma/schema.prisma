// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id               String         @id @default(cuid())
  address          String         @unique
  chainId          Int
  joinedSpaces     Space[]        @relation("UserJoinedSpaces")
  createdSpaces    Space[]        @relation("UserCreatedSpaces")
  createdVaults    FundingVault[]
  createdProposals Proposal[]
}

model Space {
  id             Int            @id @default(autoincrement())
  name           String
  description    String
  createdAt      DateTime       @default(now())
  createdBy      User           @relation("UserCreatedSpaces", fields: [creatorAddress], references: [address])
  creatorAddress String
  members        User[]         @relation("UserJoinedSpaces")
  vaults         FundingVault[]

  @@index([creatorAddress])
}

model FundingVault {
  id                       Int      @id @default(autoincrement())
  name                     String?
  description              String
  creatorAddress           String
  fundingTokenAddress      String
  minimumRequestableAmount Float
  maximumRequestableAmount Float
  fundingTokenSymbol       String
  votingTokenAddress       String
  votingTokenSymbol        String
  chainId                  String
  vaultAddress             String
  isTallied                Boolean  @default(false)
  tallyDate                DateTime
  isDistributed            Boolean  @default(false)
  createdAt                DateTime @default(now())
  spaceId                  Int
  space                    Space    @relation(fields: [spaceId], references: [id])
  creator                  User     @relation(fields: [creatorAddress], references: [address])

  proposals Proposal[]

  @@index([creatorAddress])
}

model Proposal {
  id               Int          @id @default(autoincrement())
  description      String
  proposerAddress  String
  minRequestAmount Int
  maxRequestAmount Int
  recipient        String
  proposalId       Int // proposal id w.r.t the funding vault.
  fundingVaultId   Int
  fundAllocated    Int          @default(0)
  createdAt        DateTime     @default(now())
  proposalMetadata String
  fundingVault     FundingVault @relation(fields: [fundingVaultId], references: [id])
  proposer         User         @relation(fields: [proposerAddress], references: [address])

  @@index([proposerAddress])
  @@index([fundingVaultId])
}
